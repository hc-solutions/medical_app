name: Build-push-scan

on:
  push:
    branches: ["pipeline"]
  pull_request_review:
    branches: ["pipeline"]
    types: [submitted]

jobs:
  cleanup:
    if: ${{ (github.event.review.state == 'approved') || (github.event_name == 'push') }}
    runs-on: self-hosted
    container:
      image: ghcr.io/hc-solutions/ubuntu:20.04
      credentials:
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
    steps:
      - name: Cleaning up the $GITHUB_WORKSPACE as root from a Docker image
        shell: bash
        run: if [[ -d /__w ]]; then chown -R 1000:1000 /__w; fi
  
  checkout:
    if: ${{ (github.event.review.state == 'approved') || (github.event_name == 'push') }}
    runs-on: self-hosted
    needs: [cleanup]
    outputs:
      app-name: ${{ steps.get-app-name.outputs.app-name }}
      app-version: ${{ steps.get-app-version.outputs.app-version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - id: get-app-name
        run: echo "::set-output name=app-name::`grep 'name:' ./helm/Chart.yaml | cut -d ' ' -f 2`"
      - id: get-app-version
        run: echo "::set-output name=app-version::$(version=`grep 'version:' ./helm/Chart.yaml | cut -d ' ' -f 2`"
        # run: echo "::set-output name=app-version::$(version=`grep 'version:' ./helm/Chart.yaml | cut -d ' ' -f 2` && echo `echo $version | cut -d '.' -f 1,2`.$((`echo $version | cut -d '.' -f 3`+1)))"
      # - name: Change version in helm/Chart.yaml 
      #   run: sed -i 's/version: .*/version: ${{ steps.get-app-version.outputs.app-version }}/; s/appVersion: ".*/appVersion: "${{ steps.get-app-version.outputs.app-version }}"/' helm/Chart.yaml 
      # - name: Commit and push incremented version
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     add: './helm/Chart.yaml'


      #     # The name of the user that will be displayed as the author of the commit.
      #     # Default: depends on the default_author input
      #     author_name: ${{ runner.name }}

      #     # The email of the user that will be displayed as the author of the commit.
      #     # Default: depends on the default_author input
      #     author_email: ${{ runner.name }}@hc-solutions.ml

      #     # Determines the way the action fills missing author name and email. Three options are available:
      #     # - github_actor -> UserName <UserName@users.noreply.github.com>
      #     # - user_info -> Your Display Name <your-actual@email.com>
      #     # - github_actions -> github-actions <email associated with the github logo>
      #     # Default: github_actor
      #     default_author: github_actor

      #     # The message for the commit.
      #     # Default: 'Commit from GitHub Actions (name of the workflow)'
      #     message: 'increment version'

      #     # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
      #     # - ignore -> errors will be logged but the step won't fail
      #     # - exitImmediately -> the action will stop right away, and the step will fail
      #     # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
      #     # Default: ignore
      #     pathspec_error_handling: exitImmediately

      #     # Arguments for the git pull command. By default, the action does not pull.
      #     # Default: ''
      #     pull: '--rebase --autostash ...'

      #     # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
      #     # Default: true
      #     push: true

  build-frontend:
    if: ${{ (github.event.review.state == 'approved') || (github.event_name == 'push') }}
    runs-on: self-hosted
    needs: [checkout]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push Frontend App
        uses: docker/build-push-action@v2
        with:
          context: ./frontend_app
          push: true
          tags: ghcr.io/hc-solutions/${{ needs.checkout.outputs.app-name }}-frontend:${{ needs.checkout.outputs.app-version }}
      - name: Build and push Landing
        uses: docker/build-push-action@v2
        with:
          context: ./landing
          push: true
          tags: ghcr.io/hc-solutions/${{ needs.checkout.outputs.app-name }}-landing:${{ needs.checkout.outputs.app-version }}

  

  build-backend:
    if: ${{ (github.event.review.state == 'approved') || (github.event_name == 'push') }}
    runs-on: self-hosted
    needs: [checkout]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push Backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/backend.dockerfile
          push: true
          tags: ghcr.io/hc-solutions/${{ needs.checkout.outputs.app-name }}-backend:${{ needs.checkout.outputs.app-version }}

  scan-frontend:
    if: ${{ (github.event.review.state == 'approved') || (github.event_name == 'push') }}
    runs-on: self-hosted
    needs: [build-frontend]
    steps:
      - name: Scan frontend image
        uses: Azure/container-scan@v0
        with:
          image-name: ghcr.io/hc-solutions/${{ needs.checkout.outputs.app-name }}-frontend:${{ needs.checkout.outputs.app-version }}
          severity-threshold: HIGH

  scan-backend:
    if: ${{ (github.event.review.state == 'approved') || (github.event_name == 'push') }}
    runs-on: self-hosted
    needs: [build-backend]
    steps:
      - name: Scan backend image
        uses: Azure/container-scan@v0
        with:
          image-name: ghcr.io/hc-solutions/${{ needs.checkout.outputs.app-name }}-backend:${{ needs.checkout.outputs.app-version }}
          severity-threshold: HIGH

